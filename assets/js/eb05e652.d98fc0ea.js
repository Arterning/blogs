"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[978],{224:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>g});var r=t(2374);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=o,g=p["".concat(l,".").concat(u)]||p[u]||d[u]||a;return t?r.createElement(g,s(s({ref:n},m),{},{components:t})):r.createElement(g,s({ref:n},m))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8230:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=t(9963),o=(t(2374),t(224));const a={},s=void 0,i={unversionedId:"notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668",id:"notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668",title:"deploy \u5e38\u7528\u5bb9\u5668",description:"\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6",source:"@site/docs/notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668.md",sourceDirName:"notes/\u6280\u672f\u6808/docker",slug:"/notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notes/\u6280\u672f\u6808/docker/deploy \u5e38\u7528\u5bb9\u5668.md",tags:[],version:"current",frontMatter:{},sidebar:"notes",previous:{title:"Docker desktop proxy",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/docker/Docker desktop proxy"},next:{title:"docker \u73af\u5883\u90e8\u7f72",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/docker/docker \u73af\u5883\u90e8\u7f72"}},l={},c=[{value:"RabbitMQ",id:"rabbitmq",level:2},{value:"Mongo",id:"mongo",level:2}],m={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"version: '3'\n\nservices:\n  mysql:\n    image: mysql:8\n    restart: always\n    environment:\n      MYSQL_DATABASE: wipi\n      MYSQL_ROOT_PASSWORD: root\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - ./mysql-data:/var/lib/mysql\n")),(0,o.kt)("p",null,"\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3\'\n\nservices:\n  mysql:\n    image: mysql:8\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: L94K5qLmEUk4xDtJfTu1\n    ports:\n      - "3306:3306"\n    volumes:\n      - ./mysql-data:/var/lib/mysql\n\n  adminer:\n    image: adminer\n    container_name: mysql-adminer\n    restart: always\n    ports:\n      - 8080:8080\n\n  redis:\n    image: redis\n    command: redis-server --requirepass 1568456452\n    ports:\n    - "6379:6379"\n\n  nginx:\n    image: nginx\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ./nginx-data/nginx.conf:/etc/nginx/nginx.conf\n      - ./nginx-data/conf.d:/etc/nginx/conf.d\n      - ./nginx-data/ssl:/etc/nginx/ssl\n      - ./nginx-data/666:/usr/share/nginx/html/666\n')),(0,o.kt)("p",null,"pgsql\u914d\u7f6e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3\'\n\nservices:\n  db:\n    image:  postgres\n    restart: always\n    ports:\n      - "5432:5432"\n    environment:\n      POSTGRES_PASSWORD: oPOdLbEPvGJJXB9Myaf6\n      POSTGRES_DB: test\n  test-db:\n    image: postgres\n    restart: always\n    ports:\n      - "5433:5432" # \ud83d\udc48 Note the 5433 port (since we are using 5432 for our regular db)\n    environment:\n      POSTGRES_PASSWORD: oPOdLbEPvGJJXB9Myaf6\n')),(0,o.kt)("h2",{id:"rabbitmq"},"RabbitMQ"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"version: \"3.2\"\nservices:\n  rabbitmq:\n    image: rabbitmq:3-management-alpine\n    container_name: 'rabbitmq'\n    ports:\n        - 5672:5672\n        - 15672:15672\n    volumes:\n        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/\n        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq\n    networks:\n        - rabbitmq_go_net\n\nnetworks:\n  rabbitmq_go_net:\n    driver: bridge\n")),(0,o.kt)("p",null,"\u9ed8\u8ba4\u767b\u5f55 guest/guest"),(0,o.kt)("p",null,"go to localhost:15672"),(0,o.kt)("h2",{id:"mongo"},"Mongo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"version: '3.1'\nservices:\n    db:\n        image: mongo\n        restart: always\n        container_name: mongodb-container\n        ports:\n            - '27017:27017'\n        environment:\n          MONGO_INITDB_ROOT_USERNAME: root\n          MONGO_INITDB_ROOT_PASSWORD: xiaohuiwoaini12345\n        volumes:\n            - ./mongo-data:/data/db\n")))}d.isMDXComponent=!0}}]);