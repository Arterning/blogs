"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[258],{8015:(e,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>f});var n=o(757);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var d=n.createContext({}),i=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},l=function(e){var t=i(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=i(o),m=r,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||a;return o?n.createElement(f,c(c({ref:t},l),{},{components:o})):n.createElement(f,c({ref:t},l))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,c=new Array(a);c[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[p]="string"==typeof e?e:r,c[1]=s;for(var i=2;i<a;i++)c[i]=o[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},4618:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=o(1227),r=(o(757),o(8015));const a={},c=void 0,s={unversionedId:"notes/\u6280\u672f\u6808/React/react with mobx",id:"notes/\u6280\u672f\u6808/React/react with mobx",title:"react with mobx",description:"Create a store",source:"@site/docs/notes/\u6280\u672f\u6808/React/react with mobx.md",sourceDirName:"notes/\u6280\u672f\u6808/React",slug:"/notes/\u6280\u672f\u6808/React/react with mobx",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/React/react with mobx",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notes/\u6280\u672f\u6808/React/react with mobx.md",tags:[],version:"current",frontMatter:{},sidebar:"notes",previous:{title:"useRef",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/React/react useRef"},next:{title:"react with redux",permalink:"/blogs/docs/notes/\u6280\u672f\u6808/React/react with redux"}},d={},i=[],l={toc:i},p="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Create a store"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { makeAutoObservable } from 'mobx';\n\nclass TodoStore {\n    todos = [];\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n// as you can see, we directly modified the todos instead of replace a new obj\n// mobx \u6709\u610f\u601d\u7684\u5730\u65b9\u5728\u4e8e\u4ed6\u8fdd\u53cd\u4e86react\u7684\u5bf9\u8c61\u4e0d\u53ef\u53d8\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539todos\u5bf9\u8c61\n    addTodo = (text) => {\n        this.todos.push({ id: Date.now(), text, done: false });\n    };\n\n    toggleTodo = (id) => {\n        const todo = this.todos.find(todo => todo.id === id);\n        if (todo) {\n            todo.done = !todo.done;\n        }\n    };\n}\n\nexport default new TodoStore();\n\n")),(0,r.kt)("p",null,"Create a observer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { observer } from 'mobx-react-lite';\nimport todoStore from './store';\n\nconst TodoApp = observer(() => {\n    const { todos, addTodo, toggleTodo } = todoStore;\n\n    const handleAddTodo = () => {\n        const text = prompt('Enter a new todo:');\n        if (text) {\n            addTodo(text);\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={handleAddTodo}>Add Todo</button>\n            <ul>\n                {todos.map(todo => (\n                    <li key={todo.id} onClick={() => toggleTodo(todo.id)} style={{ textDecoration: todo.done ? 'line-through' : 'none' }}>\n                        {todo.text}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n});\n\nexport default TodoApp;\n\n")))}u.isMDXComponent=!0}}]);