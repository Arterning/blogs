"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7459],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),f=a,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7304:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},i="\u6570\u636e\u4e0a\u94fe",s={unversionedId:"BackEnd/blockchain/uploadToChain",id:"BackEnd/blockchain/uploadToChain",title:"\u6570\u636e\u4e0a\u94fe",description:"\u5b9a\u4e49\u57fa\u672c\u6570\u636e\u7ed3\u6784",source:"@site/docs/BackEnd/blockchain/uploadToChain.md",sourceDirName:"BackEnd/blockchain",slug:"/BackEnd/blockchain/uploadToChain",permalink:"/blogs/docs/BackEnd/blockchain/uploadToChain",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/BackEnd/blockchain/uploadToChain.md",tags:[],version:"current",frontMatter:{},sidebar:"BackEnd",previous:{title:"deploy fabric",permalink:"/blogs/docs/BackEnd/blockchain/deployfabric"},next:{title:"docker file example",permalink:"/blogs/docs/BackEnd/deploy/DockerCompose"}},c={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6570\u636e\u4e0a\u94fe"},"\u6570\u636e\u4e0a\u94fe"),(0,a.kt)("p",null,"\u5b9a\u4e49\u57fa\u672c\u6570\u636e\u7ed3\u6784"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'type FarmBatch struct {\n    FarmList []Farm `json:"farm_list"` // \u624b\u52a8\u6279\u91cf\u519c\u573a\u4fe1\u606f\n}\n\ntype Farm struct {\n    TenantId string `json:"tenant_id"` // \u516c\u53f8ID\n    FarmId   string `json:"farm_id"`   // \u519c\u573aid\n    SectionIdList []string `json:"section_id_list"` // \u5730\u5757\u5217\u8868\n    SoilTestReportList  []TestReport `json:"soil_test_report_list"`  // \u68c0\u6d4b\u62a5\u544a\n    WaterTestReportList []TestReport `json:"water_test_report_list"` // \u68c0\u6d4b\u62a5\u544a\n    Status              int          `json:"status"`                 // \u6570\u636e\u72b6\u6001\uff0c0\u6b63\u5e38\uff0c1\u5220\u9664\u3002\n}\n\n')),(0,a.kt)("p",null,"\u63a5\u53d7\u8bf7\u6c42\u4f53\uff0c\u53cd\u5e8f\u5217\u5316\uff0c\u4e0a\u4f20\u5230\u533a\u5757\u94fe\u5b58\u50a8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func PutFarm(c *gin.Context) {\n    //farm := &define.Farm{}\n    farmBatch := &define.FarmBatch{}\n    body, err := ioutil.ReadAll(c.Request.Body)\n    if err != nil {\n        errStr := fmt.Sprintf("get body error %v", err)\n        utils.Response(errStr, c, http.StatusBadRequest)\n    }\n    if err := json.Unmarshal(body, farmBatch); err != nil {\n        errStr := fmt.Sprintf("json unmarshal error %v", err)\n        utils.Response(errStr, c, http.StatusBadRequest)\n    }\n    if len(farmBatch.FarmList) == 0 {\n        return\n    }\n    txId := ""\n    for _, farm := range farmBatch.FarmList {\n        data, err := json.Marshal(farm)\n        if err != nil {\n            errStr := fmt.Sprintf("json marshal error %v", err)\n            utils.Response(errStr, c, http.StatusBadRequest)\n        }\n        // \u66f4\u65b0\u94fe\u4e0a\u6570\u636e\n        info := []string{"PutFarm", string(data)}\n        resp, err := gohfc.GetHandler().SyncInvoke(info, "", "")\n        if err != nil {\n            errStr := fmt.Sprintf("\u6570\u636e\u4e0a\u94fe\u5931\u8d25 %v", err)\n            utils.Response(errStr, c, http.StatusBadRequest)\n        }\n        txId = resp.TxID\n    }\n    utils.Response(txId, c, http.StatusOK)\n    return\n}\n')))}d.isMDXComponent=!0}}]);